#!/bin/sh -eu

PREREQ=""
prereqs()
{
	echo "${PREREQ}"
}

case "${1:-}" in
prereqs)
	prereqs
	exit 0
	;;
esac

. /scripts/functions

configfs=""

# parse kernerl cmdline
for arg in $(cat /proc/cmdline) ; do
	case $arg in
	configfs=*)
		configfs=${arg#configfs=}
		;;
	esac
done

if [ -z "$configfs" ] ; then
	exit 0
fi

mkdir /mnt/configfs && mount -o ro,showexec "$configfs" /mnt/configfs \
	|| panic "ERROR: configfs: failed to mount configfs device $configfs"

# return if configfs directory does not exist
if [ -d /mnt/configfs/configfs/ ] ; then
	# create tmpfs for symlink mangling
	mkdir /mnt/configfs.tmpfs && mount -t tmpfs -o mode=0755 tmpfs /mnt/configfs.tmpfs \
		|| panic "ERROR: configs: failed to mount tmpfs"

	# copy data into tmpfs
	cp -a /mnt/configfs/configfs/. /mnt/configfs.tmpfs/ \
		|| panic "ERROR: configs: failed to copy from $configfs"

	# turn .symlink files into actual symlinks
	readonly cr=$(printf '\r')
	for symlink in $(find /mnt/configfs.tmpfs/ -type f -name '*.symlink') ; do
		# read target from .symlink file
		target=$(head -n1 "$symlink")
		
		# remove trailing carriage return (\r, 0x0d)
		target=${target%$cr}

		# delete .symlink file and create link
		rm "$symlink" && ln -s "$target" "${symlink%.symlink}" || continue
	done

	# copy mangled data into $rootmnt
	cp -a /mnt/configfs.tmpfs/. "${rootmnt}/" \
		|| panic "ERROR: configs: failed to copy into ${rootmnt}"

	umount /mnt/configfs.tmpfs && rmdir /mnt/configfs.tmpfs \
		|| panic "ERROR: configs: failed to unmount tmpfs"
fi

umount /mnt/configfs && rmdir /mnt/configfs \
	|| panic "ERROR: configs: failed to unmount configfs"
